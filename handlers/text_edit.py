from aiogram import types, Dispatcher
from config import database
from utils.formatters import escape_md

async def handle_text_edit(message: types.Message):
    current_user = message.from_user.username or str(message.from_user.id)

    pending = database.get_pending_edit(current_user)
    if not pending:
        return  # –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º, –æ–±—ã—á–Ω—ã–π —Ç–µ–∫—Å—Ç

    param = pending['param']
    target_username = pending['target']

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    from middleware.permissions import check_edit_permission
    if not check_edit_permission(current_user, target_username):
        await message.answer("üö´ –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
        database.clear_pending_edit(current_user)
        return

    value = message.text.strip()

    # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–∞—Å—Ç–æ–º–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É —Ç–∏–ø–∞ int/float –¥–ª—è —á–∏—Å–ª–æ–≤—ã—Ö –ø–æ–ª–µ–π
    try:
        if param in ("dates", "turnover_days_max", "revenue_min"):
            value = int(value)
        elif param == "percent":
            value = float(value)
    except Exception:
        await message.answer(f"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–ª—è `{escape_md(param)}`")
        return

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º
    database.update_user_param(target_username, param, value)
    await message.answer(f"‚úÖ –ü–∞—Ä–∞–º–µ—Ç—Ä `{escape_md(param)}` –æ–±–Ω–æ–≤–ª—ë–Ω –Ω–∞ `{escape_md(str(value))}`")

    # –æ—á–∏—â–∞–µ–º pending
    database.clear_pending_edit(current_user)

def setup_handle_text_edit(dp: Dispatcher):
    dp.message.register(handle_text_edit)