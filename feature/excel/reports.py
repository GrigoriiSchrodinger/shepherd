from datetime import datetime, timedelta
from config import DATE_FORMAT, logger

from feature.excel.excel import MpstatsExcelReport


class ProductReportService:
    """–°–µ—Ä–≤–∏—Å –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ Excel-–æ—Ç—á—ë—Ç–∞ –ø–æ —Ç–æ–≤–∞—Ä–∞–º."""

    def __init__(self, database):
        self.database = database
        self.report_generator = MpstatsExcelReport()

    async def generate_user_report(self, username: str) -> tuple[bytes, str, str] | None:
        """–§–æ—Ä–º–∏—Ä—É–µ—Ç –æ—Ç—á—ë—Ç –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
        try:
            user_data = self.database.get_user(username)
            if not user_data:
                logger.warning(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ë–î")
                return None

            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            days = user_data["dates"]
            category = user_data["category"]
            turnover_days_max = user_data["turnover_days_max"]
            revenue_min = user_data["revenue_min"]

            # –†–∞—Å—á—ë—Ç –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –¥–∞—Ç
            now = datetime.now()
            end_date = (now - timedelta(days=1)).strftime(DATE_FORMAT)
            start_date = (now - timedelta(days=days)).strftime(DATE_FORMAT)

            logger.info(f"–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç—á—ë—Ç–∞ –¥–ª—è {username}: {start_date} ‚Äî {end_date}, {category}")

            # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Excel
            excel_file = await self.report_generator.generate(start_date, end_date, category, turnover_days_max, revenue_min)

            # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –æ–ø–∏—Å–∞–Ω–∏—è
            caption = (
                "üìä –û—Ç—á—ë—Ç –ø–æ —Ç–æ–≤–∞—Ä–∞–º\n\n"
                f"üìÖ –ü–µ—Ä–∏–æ–¥: {start_date} ‚Äî {end_date}\n"
                f"üè∑ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {category}"
            )

            filename = f"WB_report_{datetime.now().strftime('%d.%m.%Y')}.xlsx"

            return excel_file.getvalue(), caption, filename

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç—á—ë—Ç–∞ –¥–ª—è {username}: {e}", exc_info=True)
            return None
